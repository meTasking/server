"""Initial migration

Revision ID: 85117bbba937
Revises: This is initial revision
Create Date: 2023-09-17 13:13:17.042651+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '85117bbba937'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'category',
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            'description',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(
        op.f('ix_category_name'),
        'category',
        ['name'],
        unique=True,
    )
    op.create_table(
        'task',
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            'description',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_name'), 'task', ['name'], unique=True)
    op.create_table(
        'log',
        sa.Column('meta', sa.JSON(), nullable=True),
        sa.Column('category_id', sa.Integer(), nullable=True),
        sa.Column('task_id', sa.Integer(), nullable=True),
        sa.Column('stopped', sa.Boolean(), nullable=False),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            'description',
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
        sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'record',
        sa.Column('meta', sa.JSON(), nullable=True),
        sa.Column('log_id', sa.Integer(), nullable=False),
        sa.Column('start', sa.DateTime(), nullable=False),
        sa.Column('end', sa.DateTime(), nullable=True),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.CheckConstraint(
            '"end" IS NULL OR "start" <= "end"',
            name='start_before_end'
        ),
        sa.ForeignKeyConstraint(['log_id'], ['log.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_record_end'), 'record', ['end'], unique=False)
    op.create_index(op.f('ix_record_start'), 'record', ['start'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_record_start'), table_name='record')
    op.drop_index(op.f('ix_record_end'), table_name='record')
    op.drop_table('record')
    op.drop_table('log')
    op.drop_index(op.f('ix_task_name'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
